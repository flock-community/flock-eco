extend type Query {
    findUserById(id: ID): User
    findAllUsers(
        search:String,
        page:Int,
        size:Int,
        sort:String
    ): [User!]!
    countUsers:Int
}

type User {
    id:ID
    name:String
    email:String
    authorities:[String]
    accounts:[UserAccount],
    created:DateTime
}

type UserGroup {
    id:ID
    name:String
}

interface UserAccount {
    id:ID
}

type UserAccountPassword implements UserAccount {
    id:ID
}

type UserAccountOauth implements UserAccount {
    id:ID,
    provider:String
}

type UserAccountKey implements UserAccount {
    id:ID,
    key:String
}

scalar DateTime
